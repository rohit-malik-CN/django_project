swagger: '2.0'
info:
  version: 'v1'
  title: DjangoProject
  description: A Simple django API for an organisation handling team projects
  contact: {}
host: rohit-malik-cn-django-8000.public.cy.devfactory.com
basePath: /myapp1
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /user/:
    post:
      description: Create a new user
      summary: Create a new user
      operationId: CreateuserPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Enter the name of the user
        schema:
          $ref: '#/definitions/CreateuserRequest'
      responses:
        200:
          description: Success response
          headers: {}
        412:
          description: The pre condition given in the request evaluated to false by the server.
          headers: {}
        450:
          description: Data not found in the database with the provided values.
          headers: {}
  /project/:
    post:
      description: Create a new project
      summary: Create a new project
      operationId: CreateprojectPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Enter the name of the project
        schema:
          $ref: '#/definitions/CreateprojectRequest'
      responses:
        200:
          description: Success response
          headers: {}
        412:
          description: The pre condition given in the request evaluated to false by the server.
          headers: {}
        450:
          description: Data not found in the database with the provided values.
          headers: {}
  /project/user/:
    post:
      description: Assign an existing project to users
      summary: Assign an existing project to users
      operationId: AssignprojectPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Enter the project_id and a list of user_ids
        schema:
          $ref: '#/definitions/AssignprojectRequest'
      responses:
        200:
          description: Success response
          headers: {}
        412:
          description: The pre condition given in the request evaluated to false by the server.
          headers: {}
        450:
          description: Data not found in the database with the provided values.
          headers: {}
  /project/mentor/:
    post:
      description: Assing a mentor to an existing project
      summary: Assing a mentor to an existing project
      operationId: ProjectAssignmentorPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: Enter the project_id and a mentor_id
        schema:
          $ref: '#/definitions/ProjectAssignmentorRequest'
      responses:
        200:
          description: Success response
          headers: {}
        412:
          description: The pre condition given in the request evaluated to false by the server.
          headers: {}
        450:
          description: Data not found in the database with the provided values.
          headers: {}
  /mentor/{mentor_id}/mentees/:
    get:
      description: Get the mentees of a given mentor
      summary: Get the mentees of a given mentor
      operationId: ProjectMentorByMentorIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: mentor_id
        in: path
        required: true
        type: integer
        format: int32
        description: User id of the mentor
      responses:
        200:
          description: Success response
          headers: {}
        412:
          description: The pre condition given in the request evaluated to false by the server.
          headers: {}
        450:
          description: Data not found in the database with the provided values.
          headers: {}
  /mentor/{mentor_id}/projects/:
    get:
      description: Get projects user is mentoring
      summary: Get projects user is mentoring
      operationId: UserProjectsByUserIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: mentor_id
        in: path
        required: true
        type: integer
        format: int32
        description: User id of the user
      responses:
        200:
          description: Success response
          headers: {}
        412:
          description: The pre condition given in the request evaluated to false by the server.
          headers: {}
        450:
          description: Data not found in the database with the provided values.
          headers: {}
  /project/{project_id}/:
    get:
      description: Get the users and mentors of a project
      summary: Get the users and mentors of a project
      operationId: ProjectByProjectIdGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: project_id
        in: path
        required: true
        type: integer
        format: int32
        description: Project id of the project
      responses:
        200:
          description: Success response
          headers: {}
        412:
          description: The pre condition given in the request evaluated to false by the server.
          headers: {}
        450:
          description: Data not found in the database with the provided values.
          headers: {}
definitions:
  CreateuserRequest:
    title: CreateuserRequest
    type: object
    properties:
      user_name:
        type: string
  CreateprojectRequest:
    title: CreateprojectRequest
    type: object
    properties:
      project_name:
        type: string
  AssignprojectRequest:
    title: AssignprojectRequest
    type: object
    properties:
      project_id:
        type: integer
        format: int32
      user_list:
        type: array
        items:
          type: integer
          format: int32
  ProjectAssignmentorRequest:
    title: ProjectAssignmentorRequest
    type: object
    properties:
      mentor_id:
        type: integer
        format: int32
      project_id:
        type: integer
        format: int32
tags: []
